{% extends 'layouts/base.html.twig' %}

{% block title %}Aviyon - Dashboard Marketplace{% endblock %}

{% block body %}
<div class="dashboard-container">
    <!-- Include the sidebar -->
    {% include 'dashboard/sidebar.html.twig' %}

    <div class="main-content">
<section class="marketplace container mx-auto py-12 px-4">
    <h1 class="text-4xl font-inter font-bold text-neon-purple mb-4 animate-fade-in">Dashboard Marketplace</h1>
    <p class="text-gray-400 mb-8 animate-fade-in-delayed">Manage and explore your NFTs in the Kodoverse.</p>

    <!-- Filters -->
    <div class="mb-8">
        <div class="flex flex-wrap gap-4">
            <select id="category-filter" class="bg-dark text-gray-300 border border-gray-600 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-neon-purple">
                <option value="">All Categories</option>
                <option value="avatars">Avatars</option>
                <option value="art">Art</option>
            </select>
            <select id="blockchain-filter" class="bg-dark text-gray-300 border border-gray-600 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-neon-purple">
                <option value="">All Blockchains</option>
                <option value="icp">ICP</option>
                <option value="ethereum">Ethereum</option>
            </select>
        </div>
    </div>

    <!-- NFT Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8" id="nft-grid">
        {% if nfts is defined and nfts is not empty %}
            {% for nft in nfts %}
                <div class="profile-card nft-card bg-dark-light p-6 rounded-lg shadow-lg hover:shadow-neon-purple/50 transition-all duration-300 transform hover:-translate-y-1 animate-slide-up" data-nft-id="{{ nft.id }}" data-category="{{ nft.category }}" data-blockchain="{{ nft.blockchain }}">
                    <canvas id="nft-{{ nft.id }}-preview" class="w-full h-48 mb-4 rounded-lg" data-model="{{ nft.modelUrl }}"></canvas>
                    <h3 class="text-xl font-inter text-neon-purple">{{ nft.name }}</h3>
                    <p class="text-gray-400">Creator: <a href="{{ path('user_profile', {'username': nft.creator}) }}" class="hover:text-neon-purple transition">{{ nft.creator }}</a></p>
                    <p class="text-gray-400">Price: {{ nft.price }}</p>
                    <p class="text-gray-400 text-sm">Created: {{ nft.createdAt|date('Y-m-d') }}</p>
                    <div class="flex space-x-3 mt-4">
                        <button class="btn bg-neon-purple text-white px-4 py-2 rounded-lg hover:bg-neon-purple/80 transition font-inter view-details">View Details</button>
                    </div>
                </div>
            {% endfor %}
        {% else %}
            <p class="text-gray-400">No NFTs available at the moment.</p>
        {% endif %}
    </div>
</section>

<!-- Modal for NFT Details -->
<div id="nft-modal" class="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center hidden">
    <div class="bg-dark-light p-8 rounded-lg shadow-lg max-w-lg w-full">
        <h3 class="text-2xl font-inter text-neon-purple mb-4" id="modal-title"></h3>
        <canvas id="modal-preview" class="w-full h-64 mb-4 rounded-lg"></canvas>
        <p class="text-gray-400 mb-2" id="modal-creator"></p>
        <p class="text-gray-400 mb-2" id="modal-price"></p>
        <p class="text-gray-400 mb-4" id="modal-created"></p>
        <div class="flex justify-end space-x-3">
            <button id="modal-close" class="text-gray-400 hover:underline">Close</button>
            <a href="{{ path('checkout') }}" class="btn bg-neon-purple text-white px-4 py-2 rounded-lg hover:bg-neon-purple/80 transition font-inter">Buy Now</a>
        </div>
    </div>
</div>
	</div>
</div>

{% block javascripts %}
<script>
// Mock initNFTPreview function for NFT items
function initNFTPreview(canvas, modelUrl) {
    const ctx = canvas.getContext('2d');
    ctx.fillStyle = '#8b5cf6';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.fillStyle = '#ffffff';
    ctx.font = '16px Arial';
    ctx.fillText('NFT Preview Placeholder', 10, 50);
    ctx.fillText(`Model: ${modelUrl || 'N/A'}`, 10, 80);
}

// Filter NFTs based on category and blockchain
function filterNFTs() {
    const category = document.getElementById('category-filter').value;
    const blockchain = document.getElementById('blockchain-filter').value;
    const nftCards = document.querySelectorAll('.nft-card');

    nftCards.forEach(card => {
        const cardCategory = card.dataset.category;
        const cardBlockchain = card.dataset.blockchain;

        const categoryMatch = !category || cardCategory === category;
        const blockchainMatch = !blockchain || cardBlockchain === blockchain;

        if (categoryMatch && blockchainMatch) {
            card.classList.remove('hidden');
        } else {
            card.classList.add('hidden');
        }
    });
}

// Show NFT details in modal
function showNFTDetails(nftCard) {
    const modal = document.getElementById('nft-modal');
    const title = document.getElementById('modal-title');
    const preview = document.getElementById('modal-preview');
    const creator = document.getElementById('modal-creator');
    const price = document.getElementById('modal-price');
    const created = document.getElementById('modal-created');

    title.textContent = nftCard.querySelector('h3').textContent;
    creator.textContent = `Creator: ${nftCard.querySelector('a').textContent}`;
    price.textContent = nftCard.querySelector('p:nth-of-type(2)').textContent;
    created.textContent = nftCard.querySelector('p:nth-of-type(3)').textContent;

    const modelUrl = nftCard.querySelector('canvas').dataset.model;
    initNFTPreview(preview, modelUrl);

    modal.classList.remove('hidden');
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', () => {
    // Initialize NFT previews
    document.querySelectorAll('[id^="nft-"]').forEach(canvas => {
        if (canvas.dataset.initialized) return;
        canvas.dataset.initialized = true;
        initNFTPreview(canvas, canvas.dataset.model);
    });

    // Filter functionality
    document.getElementById('category-filter').addEventListener('change', filterNFTs);
    document.getElementById('blockchain-filter').addEventListener('change', filterNFTs);

    // Modal functionality
    document.querySelectorAll('.view-details').forEach(btn => {
        btn.addEventListener('click', () => {
            const nftCard = btn.closest('.nft-card');
            showNFTDetails(nftCard);
        });
    });

    document.getElementById('modal-close').addEventListener('click', () => {
        document.getElementById('nft-modal').classList.add('hidden');
    });
});
</script>
<style>
.dashboard-container {
    display: flex;
}
.main-content {
    margin-left: 250px;
    padding: 20px;
    width: 100%;
}
.animate-fade-in {
    animation: fadeIn 0.5s ease-in;
}
.animate-fade-in-delayed {
    animation: fadeIn 0.5s ease-in 0.2s;
}
.animate-slide-up {
    animation: slideUp 0.5s ease-out;
}
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}
@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}
</style>
{% endblock %}
{% endblock %}
