{% extends 'layouts/base.html.twig' %}

{% block title %}Aviyon - NFT Marketplace{% endblock %}

{% block body %}
<section class="marketplace container mx-auto py-12 px-4">
    <h1 class="text-4xl font-inter font-bold text-neon-purple mb-4 animate-fade-in">Aviyon NFT Bazaar</h1>
    <p class="text-gray-400 mb-8 animate-fade-in-delayed">Discover, buy, and bid on unique NFTs in the kodoverse.</p>

    <!-- Filters -->
    <div class="flex flex-wrap justify-between gap-4 mb-8 bg-dark-light p-4 rounded-lg shadow-lg animate-slide-up">
        <select class="form-control w-48 bg-dark text-gray-300 border border-gray-600 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-neon-purple transition" id="sort-by">
            <option value="price-asc">Price: Low to High</option>
            <option value="price-desc">Price: High to Low</option>
            <option value="newest">Newest</option>
            <option value="popularity">Popularity</option>
        </select>
        <select class="form-control w-48 bg-dark text-gray-300 border border-gray-600 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-neon-purple transition" id="category">
            <option value="all">Category: All</option>
            <option value="art">Art</option>
            <option value="collectibles">Collectibles</option>
            <option value="gaming">Gaming</option>
            <option value="avatars">Avatars</option>
        </select>
        <select class="form-control w-48 bg-dark text-gray-300 border border-gray-600 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-neon-purple transition" id="blockchain">
            <option value="all">Blockchain: All</option>
            <option value="icp">Internet Computer</option>
            <option value="ethereum">Ethereum</option>
        </select>
        <input type="text" class="form-control flex-1 bg-dark text-gray-300 border border-gray-600 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-neon-purple transition" id="nft-search" placeholder="Search NFTs by name, creator, or description">
    </div>

    <!-- NFT Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8" id="nft-grid">
        {% for nft in nfts %}
            <div class="profile-card nft-card bg-dark-light p-6 rounded-lg shadow-lg hover:shadow-neon-purple/50 transition-all duration-300 transform hover:-translate-y-1 animate-slide-up" data-nft-id="{{ nft.id }}" data-category="{{ nft.category|default('art') }}" data-blockchain="{{ nft.blockchain|default('icp') }}">
                <canvas id="nft-{{ nft.id }}-preview" class="w-full h-48 mb-4 rounded-lg" data-model="{{ nft.modelUrl }}"></canvas>
                <h3 class="text-xl font-inter text-neon-purple">{{ nft.name }}</h3>
                <p class="text-gray-400">Creator: <a href="{{ path('user_profile', {'username': nft.creator}) }}" class="hover:text-neon-purple transition">{{ nft.creator }}</a></p>
                <p class="text-gray-400">Price: {{ nft.price }} {{ nft.currency|default('ETH') }}</p>
                <p class="text-gray-400 text-sm">Created: {{ nft.createdAt|date('Y-m-d') }}</p>
                <div class="flex space-x-3 mt-4">
                    <button class="btn buy-now bg-neon-purple text-white px-4 py-2 rounded-lg hover:bg-neon-purple/80 transition font-inter" data-nft-id="{{ nft.id }}">Buy Now</button>
                    <button class="btn place-bid bg-gray-600 text-gray-300 px-4 py-2 rounded-lg hover:bg-gray-500 transition font-inter" data-nft-id="{{ nft.id }}">Place Bid</button>
                </div>
            </div>
        {% endfor %}
    </div>

    <!-- NFT Detail Modal -->
    <div id="nft-modal" class="fixed inset-0 bg-black bg-opacity-75 hidden flex items-center justify-center z-50 animate-fade-in">
        <div class="bg-dark-light p-8 rounded-lg max-w-2xl w-full shadow-lg">
            <div class="flex justify-between items-center mb-6">
                <h2 id="modal-title" class="text-2xl font-inter text-neon-purple"></h2>
                <button id="modal-close" class="text-gray-400 hover:text-neon-purple transition">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M18 6L6 18M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <canvas id="modal-nft-preview" class="w-full h-64 mb-6 rounded-lg"></canvas>
            <p id="modal-creator" class="text-gray-400 mb-2"></p>
            <p id="modal-price" class="text-gray-400 mb-2"></p>
            <p id="modal-description" class="text-gray-400 mb-6"></p>
            <div class="flex space-x-4">
                <button id="modal-buy" class="btn bg-neon-purple text-white px-6 py-2 rounded-lg hover:bg-neon-purple/80 transition font-inter">Buy Now</button>
                <div class="flex items-center">
                    <input type="number" id="modal-bid" class="form-control w-32 bg-dark text-gray-300 border border-gray-600 rounded-lg p-2 mr-3 focus:outline-none focus:ring-2 focus:ring-neon-purple transition" placeholder="Enter bid" step="0.01">
                    <button id="modal-bid-submit" class="btn bg-gray-600 text-gray-300 px-4 py-2 rounded-lg hover:bg-gray-500 transition font-inter">Place Bid</button>
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block javascripts %}
<script>
const nfts = {{ nfts|json_encode|raw }};

// Modal Functionality
initModal('nft-modal', '.nft-card', '#modal-close');

// Populate Modal on NFT Card Click
document.querySelectorAll('.nft-card').forEach(card => {
    card.addEventListener('click', (e) => {
        if (e.target.closest('.btn')) return;
        const nftId = card.dataset.nftId;
        const nft = nfts.find(n => n.id == nftId);
        document.getElementById('modal-title').textContent = nft.name;
        document.getElementById('modal-creator').textContent = `Creator: ${nft.creator}`;
        document.getElementById('modal-price').textContent = `Price: ${nft.price} ${nft.currency || 'ETH'}`;
        document.getElementById('modal-description').textContent = nft.description || 'A unique NFT in the kodoverse.';

        // Render NFT in Modal
        const modalCanvas = document.getElementById('modal-nft-preview');
        initNFTPreview(modalCanvas, nft.modelUrl);
    });
});

// Buy Now and Place Bid Logic
document.querySelectorAll('.buy-now').forEach(btn => {
    btn.addEventListener('click', async (e) => {
        e.stopPropagation();
        const nftId = btn.dataset.nftId;
        alert(`Initiating purchase for NFT ID: ${nftId}`);
    });
});

document.querySelectorAll('.place-bid').forEach(btn => {
    btn.addEventListener('click', (e) => {
        e.stopPropagation();
        const nftId = btn.dataset.nftId;
        const nft = nfts.find(n => n.id == nftId);
        document.getElementById('modal-title').textContent = nft.name;
        document.getElementById('modal-creator').textContent = `Creator: ${nft.creator}`;
        document.getElementById('modal-price').textContent = `Price: ${nft.price} ${nft.currency || 'ETH'}`;
        document.getElementById('modal-description').textContent = nft.description || 'A unique NFT in the kodoverse.';
        document.getElementById('nft-modal').classList.remove('hidden');
        document.getElementById('modal-bid').focus();

        const modalCanvas = document.getElementById('modal-nft-preview');
        initNFTPreview(modalCanvas, nft.modelUrl);
    });
});

document.getElementById('modal-bid-submit').addEventListener('click', () => {
    const bid = document.getElementById('modal-bid').value;
    if (bid <= 0) {
        alert('Please enter a valid bid amount.');
        return;
    }
    alert(`Bid placed: ${bid} ETH`);
    document.getElementById('nft-modal').classList.add('hidden');
});

// Filter and Search Functionality
const sortBy = document.getElementById('sort-by');
const category = document.getElementById('category');
const blockchain = document.getElementById('blockchain');
const searchInput = document.getElementById('nft-search');
const nftGrid = document.getElementById('nft-grid');

function filterNFTs() {
    const sortValue = sortBy.value;
    const categoryValue = category.value;
    const blockchainValue = blockchain.value;
    const searchValue = searchInput.value.toLowerCase();

    let filteredNFTs = [...nfts];

    if (categoryValue !== 'all') {
        filteredNFTs = filteredNFTs.filter(nft => nft.category === categoryValue);
    }

    if (blockchainValue !== 'all') {
        filteredNFTs = filteredNFTs.filter(nft => nft.blockchain === blockchainValue);
    }

    if (searchValue) {
        filteredNFTs = filteredNFTs.filter(nft =>
            nft.name.toLowerCase().includes(searchValue) ||
            nft.creator.toLowerCase().includes(searchValue) ||
            (nft.description && nft.description.toLowerCase().includes(searchValue))
        );
    }

    if (sortValue === 'price-asc') {
        filteredNFTs.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));
    } else if (sortValue === 'price-desc') {
        filteredNFTs.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));
    } else if (sortValue === 'newest') {
        filteredNFTs.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
    } else if (sortValue === 'popularity') {
        filteredNFTs.sort((a, b) => (b.popularity || 0) - (a.popularity || 0));
    }

    nftGrid.innerHTML = filteredNFTs.map(nft => `
        <div class="profile-card nft-card bg-dark-light p-6 rounded-lg shadow-lg hover:shadow-neon-purple/50 transition-all duration-300 transform hover:-translate-y-1 animate-slide-up" data-nft-id="${nft.id}" data-category="${nft.category || 'art'}" data-blockchain="${nft.blockchain || 'icp'}">
            <canvas id="nft-${nft.id}-preview" class="w-full h-48 mb-4 rounded-lg" data-model="${nft.modelUrl}"></canvas>
            <h3 class="text-xl font-inter text-neon-purple">${nft.name}</h3>
            <p class="text-gray-400">Creator: <a href="${path('user_profile', {'username': nft.creator})}" class="hover:text-neon-purple transition">${nft.creator}</a></p>
            <p class="text-gray-400">Price: ${nft.price} ${nft.currency || 'ETH'}</p>
            <p class="text-gray-400 text-sm">Created: ${new Date(nft.createdAt).toISOString().split('T')[0]}</p>
            <div class="flex space-x-3 mt-4">
                <button class="btn buy-now bg-neon-purple text-white px-4 py-2 rounded-lg hover:bg-neon-purple/80 transition font-inter" data-nft-id="${nft.id}">Buy Now</button>
                <button class="btn place-bid bg-gray-600 text-gray-300 px-4 py-2 rounded-lg hover:bg-gray-500 transition font-inter" data-nft-id="${nft.id}">Place Bid</button>
            </div>
        </div>
    `).join('');

    document.querySelectorAll('[id^="nft-"]').forEach(canvas => {
        if (canvas.dataset.initialized) return;
        canvas.dataset.initialized = true;
        initNFTPreview(canvas, canvas.dataset.model);
    });
}

sortBy.addEventListener('change', filterNFTs);
category.addEventListener('change', filterNFTs);
blockchain.addEventListener('change', filterNFTs);
searchInput.addEventListener('input', filterNFTs);

filterNFTs();
</script>
<style>
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}
@keyframes fadeInDelayed {
    0% { opacity: 0; }
    50% { opacity: 0; }
    100% { opacity: 1; }
}
@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}
.animate-fade-in { animation: fadeIn 0.5s ease-out; }
.animate-fade-in-delayed { animation: fadeInDelayed 1s ease-out; }
.animate-slide-up { animation: slideUp 0.5s ease-out; }
</style>
{% endblock %}
