{% extends 'layouts/base.html.twig' %}

{% block title %}Notifications - Aviyon{% endblock %}

{% block body %}
<div class="dashboard-container">
    <!-- Include the sidebar -->
    {% include 'dashboard/sidebar.html.twig' %}

    <div class="main-content">
        <!-- Header -->
        <div class="flex justify-between items-center mb-8 pt-12">
            <h1 class="text-4xl font-inter font-bold text-neon-purple">Notifications</h1>
            <div class="relative">
                <input type="text" id="notification-filter" placeholder="Filter notifications..." class="p-3 bg-dark-light rounded-lg text-gray-300 focus:outline-none focus:ring-2 focus:ring-neon-purple">
                <svg class="absolute right-3 top-3 w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </div>
        </div>

        <!-- Notification List -->
        <div id="notification-list" class="space-y-6">
            {% for notification in notifications|default([]) %}
                <div class="notification bg-dark-light p-6 rounded-lg shadow-lg hover:shadow-neon-purple/50 transition-all duration-300">
                    <div class="flex items-start space-x-4">
                        <div class="flex-shrink-0">
                            <svg class="w-8 h-8 text-neon-purple" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                            </svg>
                        </div>
                        <div class="flex-1">
                            <h3 class="text-lg font-inter text-gray-300">{{ notification.title|default('New Notification') }}</h3>
                            <p class="text-gray-400">{{ notification.message|default('You have a new notification.')|slice(0, 100) }}{% if notification.message|default('')|length > 100 %}...{% endif %}</p>
                            <p class="text-gray-500 text-sm mt-1">{{ notification.timestamp|default('now'|date('Y-m-d H:i:s')) }}</p>
                        </div>
                        <div>
                            <button class="mark-as-read text-gray-400 hover:text-neon-purple transition" data-id="{{ notification.id|default(loop.index) }}">Mark as Read</button>
                        </div>
                    </div>
                </div>
            {% else %}
                <p class="text-gray-400">No notifications available.</p>
            {% endfor %}
        </div>

        <!-- Load More -->
        <div class="mt-8 text-center pb-12">
            <button id="load-more-notifications" data-page="1" class="bg-neon-purple text-white px-6 py-3 rounded-lg hover:bg-neon-purple/80 transition font-inter">Load More</button>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', () => {
    // Filter Notifications
    const filterInput = document.getElementById('notification-filter');
    const notificationList = document.getElementById('notification-list');
    filterInput.addEventListener('input', () => {
        const filter = filterInput.value.toLowerCase();
        const notifications = notificationList.querySelectorAll('.notification');
        notifications.forEach(notification => {
            const text = notification.textContent.toLowerCase();
            notification.style.display = text.includes(filter) ? '' : 'none';
        });
    });

    // Mark as Read
    const markAsReadButtons = document.querySelectorAll('.mark-as-read');
    markAsReadButtons.forEach(button => {
        button.addEventListener('click', async () => {
            const id = button.dataset.id;
            try {
                const response = await fetch(`/notifications/mark-as-read/${id}`, { method: 'POST' });
                if (response.ok) {
                    button.closest('.notification').remove();
                }
            } catch (error) {
                console.error('Error marking notification as read:', error);
            }
        });
    });

    // Load More Notifications
    const loadMoreButton = document.getElementById('load-more-notifications');
    loadMoreButton.addEventListener('click', async () => {
        const page = parseInt(loadMoreButton.dataset.page) + 1;
        try {
            const response = await fetch(`/notifications?page=${page}`);
            const data = await response.json();
            data.notifications.forEach(notification => {
                const notificationDiv = document.createElement('div');
                notificationDiv.className = 'notification bg-dark-light p-6 rounded-lg shadow-lg hover:shadow-neon-purple/50 transition-all duration-300';
                notificationDiv.innerHTML = `
                    <div class="flex items-start space-x-4">
                        <div class="flex-shrink-0">
                            <svg class="w-8 h-8 text-neon-purple" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                            </svg>
                        </div>
                        <div class="flex-1">
                            <h3 class="text-lg font-inter text-gray-300">${notification.title}</h3>
                            <p class="text-gray-400">${notification.message.slice(0, 100)}${notification.message.length > 100 ? '...' : ''}</p>
                            <p class="text-gray-500 text-sm mt-1">${notification.timestamp}</p>
                        </div>
                        <div>
                            <button class="mark-as-read text-gray-400 hover:text-neon-purple transition" data-id="${notification.id}">Mark as Read</button>
                        </div>
                    </div>
                `;
                notificationList.appendChild(notificationDiv);
            });
            loadMoreButton.dataset.page = page;
        } catch (error) {
            console.error('Error loading notifications:', error);
        }
    });
});
</script>
{% endblock %}
